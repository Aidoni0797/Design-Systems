3.1. Basics of HTTP and HTTPS

HTTP (Hypertext Transfer Protocol) and HTTPS (Hypertext Transfer Protocol Secure) являются протоколами
передачи данных в сети Интернет. Они используются для обмена информацией между клиентскими и
серверными приложениями.

3.1.1. Основные принципы работы HTTP

Принцип работы: HTTP - это протокол, используемый для передачи гипертекстовой информации, такой как
веб-страницы, между клиентскими и серверными приложениями. В основе протокола лежит модель запрос-ответ,
где клиент отправляет HTTP-запросы серверу, а сервер отвеччает на них HTTP-ответами.

Методы запросов: HTTP определяет различные методы запросов, которые определяют тип операции, которую
клиент хочет выполнить на сервере. Основные методы включают:

-GET - запрашивает данные с сервера. Этот метод используется для получения информации, такой как
HTML-страницы или изображения.

- POST - отправляет данные на сервер для обработки. Используется для передачи данных формы, загрузки
файлов и других операций, изменяющих состояние сервера.

- PUT - заменяет все текущие представляения ресурса данными, переданными в теле запроса.

- DELETE - удаляет указанный ресурс на сервер.

- HEAD - запрашивает заголовки ресурса, но не его тело. Этот метод полезен для получения метаданных.

- OPTIONS - возвращает методы HTTP, поддерживаемые сервером для указанного ресурса.

- PATCH - частично обновляет ресурс.

Структура запроса и ответа: HTTP -запрос состоит из трех основных компонентов:

1. Метод запроса - определяет действие, которое хочет выполнить клиент ( например, GET или POST).
2. URL-адрес - указывает ресурс, к которому обращается клиент.
3. Версия протокола - определяет версию HTTP, используемую в запросе (например, HTTP/1.1).

Пример HTTP-запроса:

GET /index.html HTTP/1.1
Host: www.example.com
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64)
Accept: text/html

HTTP-ответ включает в себя:
1. Код состояния - указывает результат запроса (например, 200 ОК или 404 Not Found).
2. Версия протокола - определяют версию HTTP, используемую в ответе.
3. Заголовки ответа - содержат метаданные о ответе.
4. Тело ответа - содержит данные, такие как HTML - код веб-страницы.

Пример HTTP-ответа:
HTTP/1.1 200 OK
Content-Type: text/html
Content-LEngth: 305
<!DOCTYPE html>
<html>
<head>
<title>Example</title>
</head>
<body>
<h1>Hello,
